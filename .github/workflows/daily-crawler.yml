name: Daily Community Crawler

on:
  schedule:
    # # UTC+0 기준이므로 한국시간 오후 7시
    # - cron: '0 10 * * *'
    # UTC+0 기준이므로 한국시간 오전 7시
    - cron: '0 22 * * *'
  
  # 수동 실행 가능
  workflow_dispatch:

jobs:
  crawl:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Run crawler
      env:
        PYTHONPATH: .
      run: |
        python dev/crawl_only.py 2>&1 || echo "크롤링 중 일부 오류 발생했지만 계속 진행"

    - name: Debug Python Path
      run: |
        python -c "import sys; print(sys.path)"
        
    - name: Generate static HTML from crawled data
      run: |
        python -c "
        import sys, os, shutil
        sys.path.append('.')
        from app import create_app
        from app.models import Post
        from flask import render_template
        from datetime import datetime

        app = create_app()
        
        with app.app_context():
            with app.test_request_context():
                from app.models import db
                
                # 모든 게시물 가져오기
                all_posts = Post.query.order_by(Post.crawled_at.desc()).all()
                
                # Python으로 사이트 우선순위 정렬: 보배 -> 디시 -> 뽐뿌 -> 에펨 순
                site_priority = {'bobae': 0, 'dcinside': 1, 'ppomppu': 2, 'fmkorea': 3}
                
                posts = sorted(all_posts, key=lambda x: (site_priority.get(x.site, 99), -x.crawled_at.timestamp()))[:50]
                
                sites = {
                    'bobae': {'name': '보배드림', 'enabled': True},
                    'dcinside': {'name': '디시인사이드', 'enabled': True},
                    'ppomppu': {'name': '뽐뿌', 'enabled': True},
                    'fmkorea': {'name': '에펨코리아', 'enabled': True}
                }
                
                # 한국시간으로 변경 (UTC+9)
                from datetime import timezone, timedelta
                kst = timezone(timedelta(hours=9))
                
                # 방문자 통계 (정적 사이트용 기본값)
                total_visitors = 0
                today_visitors = 0
                
                html = render_template('static.html', 
                                     posts=posts, 
                                     sites=sites,
                                     total_visitors=total_visitors,
                                     today_visitors=today_visitors,
                                     last_updated=datetime.now(kst).strftime('%Y-%m-%d %H:%M'))
            
            with open('index.html', 'w', encoding='utf-8') as f:
                f.write(html)
            
            os.makedirs('static/css', exist_ok=True)
            os.makedirs('static/js', exist_ok=True)
            
            if os.path.exists('app/static/css/style.css'):
                shutil.copy2('app/static/css/style.css', 'static/css/style.css')
            if os.path.exists('app/static/js/app.js'):
                shutil.copy2('app/static/js/app.js', 'static/js/app.js')
            
            print(f'Static HTML generated using template with {len(posts)} posts')
            print('Static files copied successfully')
        "
        
    - name: Commit and push updated files
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add .
        git add -f output/
        git diff --staged --quiet || git commit -m "🔄 Auto update: $(date '+%Y-%m-%d %H:%M') - 크롤링 완료"
        git push
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}